<?php

/**
 * @file
 * Enables time sheet entry for users.
 */

function atrium_time_tracker_init() {
  drupal_add_css(drupal_get_path('module', 'atrium_time_tracker') .'/css/atrium_time_tracker.css');
}

function atrium_time_tracker_menu_alter (&$items) {
  $items['time_sheet'] = array(
    'title' => 'Time Sheet',
    'description' => 'My Time Sheet',
    'page callback' => 'time_sheet_user_page',
    'page arguments' => array(1),
    'access arguments' => array('view time sheet entries'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'features',
    'options' => array(
      'attributes' => array(
        'class' => 'time_sheet_link'
      ),
    ),
  );
}

/**
 * Helper function to dynamically enter the current user
 * into the path of the time sheet link in the features menu
 */
function currentuser_to_arg($arg) {
  global $user;
  return $user->uid;
}

/***************************************************************************
 * THEME FUNCTION OVERRIDES
 ***************************************************************************/

/**
 * Implements hook_theme_registry_alter()
 */
function atrium_time_tracker_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['time_estimate_summary'])) {
    $theme_registry['time_estimate_summary']['function'] = 'atrium_time_estimate_summary';
  }
}

/**
 * Theme function override for the time estimate summary
 * 
 * Overrides theme_time_estimate_summary in module time_estimate
 * 
 * @param $time_tracker_time
 *    Time logged so far in hours
 * 
 * @param $time_estimate_time
 *    Time estimate in hours
 */
function atrium_time_estimate_summary($time_tracker_time, $time_estimate_time) {

  $rows = array();
  
  if ($time_estimate_time > $time_tracker_time) {
    $class = 'time_under';
    $remaining = format_hours_to_hours_and_minutes($time_estimate_time - $time_tracker_time, TRUE) . t(' remaining');
  }
  else {
    $class = 'time_over';
    $remaining = t('over by: ') . format_hours_to_hours_and_minutes(abs($time_estimate_time - $time_tracker_time), TRUE);
  }
  
  $rows[] = array(
    array(
      'data' => '<span class="time_tracker_icon"> </span>',
      'class' => 'icon',
    ),
    array(
      'data' => '<span class="time_estimate_label">' . t('Estimated Time:') . '</span><br/>' .
                '<span class="time_estimate_time">' .
                format_hours_to_hours_and_minutes($time_estimate_time) . '</span>',
      'class' => 'time_estimate',
    ),
    array(
      'data' => '<span class="time_tracker_label">' . t('Time Logged:') . '</span><br/>' .
                '<span class="time_tracker_time">' .
                format_hours_to_hours_and_minutes($time_tracker_time) . 
                '</span> <span class="time_tracker_remaining ' . $class . 
                '">(' . $remaining . ')</span>',
      'class' => 'time_tracker',
    ),
  );
  return theme('table', $headers, $rows, array('class' => 'time_estimate_summary'));

}



